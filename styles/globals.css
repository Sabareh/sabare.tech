@import url("https://fonts.cdnfonts.com/css/sf-pro-display");
@import "./tokens.css";

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    color-scheme: light;
  }

  .dark {
    color-scheme: dark;
  }

  html {
    font-family: "SF Pro Text", "SF Pro Display", "Inter var", system-ui, -apple-system, BlinkMacSystemFont,
      "Segoe UI", sans-serif;
    font-feature-settings: "ss01" on, "cv09" on;
    scroll-behavior: smooth;
  }

  body {
    min-height: 100vh;
    background-color: var(--bg);
    color: var(--text);
    font-synthesis: none;
    text-rendering: optimizeLegibility;
    -webkit-font-smoothing: antialiased;
    position: relative;
  }

  body::before,
  body::after {
    content: "";
    position: fixed;
    inset: 0;
    pointer-events: none;
    z-index: -2;
  }

  body::before {
    background: radial-gradient(160% 120% at 20% -10%, rgba(10, 132, 255, 0.18) 0%, transparent 55%),
      radial-gradient(140% 120% at 80% -20%, rgba(255, 90, 180, 0.18) 0%, transparent 60%),
      radial-gradient(120% 140% at 50% 110%, rgba(54, 209, 220, 0.14) 0%, transparent 70%),
      linear-gradient(180deg, rgba(255, 255, 255, 0.65) 0%, rgba(245, 247, 251, 0.92) 35%, rgba(240, 243, 248, 1) 100%);
  }

  body::after {
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='160' height='160' viewBox='0 0 160 160'%3E%3Cfilter id='n'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.8' numOctaves='4' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='160' height='160' filter='url(%23n)' opacity='0.22'/%3E%3C/svg%3E");
    mix-blend-mode: soft-light;
    opacity: var(--glass-noise-opacity);
  }

  .dark body::before {
    background: radial-gradient(160% 120% at 20% -20%, rgba(10, 132, 255, 0.24) 0%, transparent 60%),
      radial-gradient(140% 120% at 80% -10%, rgba(130, 95, 255, 0.2) 0%, transparent 65%),
      radial-gradient(120% 140% at 50% 120%, rgba(72, 149, 239, 0.22) 0%, transparent 75%),
      linear-gradient(180deg, rgba(12, 16, 24, 0.92) 0%, rgba(11, 15, 22, 0.96) 40%, rgba(9, 13, 19, 1) 100%);
  }

  body::backdrop {
    background-color: rgba(255, 255, 255, 0.82);
  }

  ::selection {
    background: color-mix(in srgb, var(--brand) 24%, transparent);
    color: var(--text);
  }
}

@layer base {
  *,
  *::before,
  *::after {
    box-sizing: border-box;
    border-color: var(--hairline);
  }

  img,
  video {
    display: block;
    max-width: 100%;
  }

  button:focus-visible,
  [role="button"]:focus-visible,
  a:focus-visible,
  input:focus-visible,
  textarea:focus-visible,
  select:focus-visible {
    outline: none;
    box-shadow: 0 0 0 3px color-mix(in oklab, var(--brand) 40%, transparent);
  }

  @media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
      animation-duration: 0.001ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.001ms !important;
      scroll-behavior: auto !important;
    }
  }
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }

  .glass-surface {
    background: var(--glass-surface);
    backdrop-filter: blur(var(--glass-blur-md)) saturate(160%);
    -webkit-backdrop-filter: blur(var(--glass-blur-md)) saturate(160%);
    border: 1px solid var(--glass-stroke);
    box-shadow: var(--shadow-xs);
  }

  .glass-elevated {
    background: var(--glass-elevated);
    backdrop-filter: blur(var(--glass-blur-lg)) saturate(180%);
    -webkit-backdrop-filter: blur(var(--glass-blur-lg)) saturate(180%);
    border: 1px solid var(--glass-stroke);
    box-shadow: var(--shadow-sm);
  }

  .glass-strong {
    background: color-mix(in srgb, var(--glass-elevated) 80%, var(--surface) 20%);
    backdrop-filter: blur(var(--glass-blur-lg)) saturate(200%);
    -webkit-backdrop-filter: blur(var(--glass-blur-lg)) saturate(200%);
    border: 1px solid color-mix(in srgb, var(--glass-stroke) 70%, transparent);
    box-shadow: var(--shadow-md);
  }

  .glass-noise::after {
    content: "";
    position: absolute;
    inset: 0;
    border-radius: inherit;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='120' height='120' viewBox='0 0 120 120'%3E%3Cfilter id='noise'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.2' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='120' height='120' filter='url(%23noise)' opacity='0.25'/%3E%3C/svg%3E");
    mix-blend-mode: soft-light;
    opacity: var(--glass-noise-opacity);
    pointer-events: none;
  }

  .hairline {
    border-color: var(--hairline);
  }

  .hairline-strong {
    border-color: var(--hairline-strong);
  }

  .focus-ring {
    outline: none;
    box-shadow: 0 0 0 3px color-mix(in oklab, var(--brand) 40%, transparent);
  }

  .shadow-xs {
    box-shadow: var(--shadow-xs);
  }

  .shadow-sm {
    box-shadow: var(--shadow-sm);
  }

  .shadow-md {
    box-shadow: var(--shadow-md);
  }

  .shadow-lg {
    box-shadow: var(--shadow-lg);
  }

  .backdrop-glass-sm {
    backdrop-filter: blur(var(--glass-blur-sm));
    -webkit-backdrop-filter: blur(var(--glass-blur-sm));
  }

  .backdrop-glass-md {
    backdrop-filter: blur(var(--glass-blur-md));
    -webkit-backdrop-filter: blur(var(--glass-blur-md));
  }

  .backdrop-glass-lg {
    backdrop-filter: blur(var(--glass-blur-lg));
    -webkit-backdrop-filter: blur(var(--glass-blur-lg));
  }

  .no-blur {
    backdrop-filter: none !important;
    -webkit-backdrop-filter: none !important;
  }

  .surface-solid {
    background: color-mix(in srgb, var(--surface) 86%, transparent 14%);
    border: 1px solid color-mix(in srgb, var(--hairline) 70%, transparent);
  }

  .safe-top {
    padding-top: calc(env(safe-area-inset-top) + 0.75rem);
  }

  .safe-bottom {
    padding-bottom: calc(env(safe-area-inset-bottom) + 0.75rem);
  }

  .transition-smooth {
    transition-timing-function: cubic-bezier(0.2, 0.8, 0.2, 1);
  }

  .will-change-transform {
    will-change: transform;
  }
}

@supports not ((-webkit-backdrop-filter: blur(1px)) or (backdrop-filter: blur(1px))) {
  .glass-surface,
  .glass-elevated,
  .glass-strong {
    background: color-mix(in oklab, var(--surface) 86%, black 0%);
    border: 1px solid color-mix(in srgb, var(--hairline-strong) 60%, transparent);
    box-shadow: var(--shadow-xs);
  }

  .glass-noise::after {
    display: none;
  }
}
